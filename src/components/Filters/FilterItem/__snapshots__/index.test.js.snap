// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterItem Props tests renders FilterItem with index 0  1`] = `
<ThemeContextProvider>
  <Component
    horizontal={true}
    index={0}
    label="1 sem."
    multiFilter={true}
    selected={false}
  >
    <FilterItem
      horizontal={true}
      index={0}
      label="1 sem."
      multiFilter={true}
      selected={false}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="transparent"
        horizontal={true}
        index={0}
      >
        <StyledNativeComponent
          backgroundColor="transparent"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={true}
          index={0}
        >
          <ForwardRef
            backgroundColor="transparent"
            horizontal={true}
            index={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="transparent"
              horizontal={true}
              hostRef={null}
              index={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#A3A2A2"
                      >
                        <StyledNativeComponent
                          color="#A3A2A2"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#A3A2A2"
                            style={
                              Array [
                                Object {
                                  "color": "#A3A2A2",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#A3A2A2"
                              style={
                                Array [
                                  Object {
                                    "color": "#A3A2A2",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders FilterItem with index greater than 0 1`] = `
<ThemeContextProvider>
  <Component
    index={1}
    label="1 sem."
    multiFilter={true}
    selected={false}
  >
    <FilterItem
      index={1}
      label="1 sem."
      multiFilter={true}
      selected={false}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="transparent"
        index={1}
      >
        <StyledNativeComponent
          backgroundColor="transparent"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          index={1}
        >
          <ForwardRef
            backgroundColor="transparent"
            index={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 11,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="transparent"
              hostRef={null}
              index={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 11,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 11,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 11,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 11,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 11,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#A3A2A2"
                      >
                        <StyledNativeComponent
                          color="#A3A2A2"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#A3A2A2"
                            style={
                              Array [
                                Object {
                                  "color": "#A3A2A2",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#A3A2A2"
                              style={
                                Array [
                                  Object {
                                    "color": "#A3A2A2",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders horizontal FilterItem with index 0  1`] = `
<ThemeContextProvider>
  <Component
    horizontal={true}
    index={0}
    label="1 sem."
    multiFilter={true}
    selected={false}
  >
    <FilterItem
      horizontal={true}
      index={0}
      label="1 sem."
      multiFilter={true}
      selected={false}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="transparent"
        horizontal={true}
        index={0}
      >
        <StyledNativeComponent
          backgroundColor="transparent"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={true}
          index={0}
        >
          <ForwardRef
            backgroundColor="transparent"
            horizontal={true}
            index={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="transparent"
              horizontal={true}
              hostRef={null}
              index={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#A3A2A2"
                      >
                        <StyledNativeComponent
                          color="#A3A2A2"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#A3A2A2"
                            style={
                              Array [
                                Object {
                                  "color": "#A3A2A2",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#A3A2A2"
                              style={
                                Array [
                                  Object {
                                    "color": "#A3A2A2",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders horizontal FilterItem with index greater than 0 1`] = `
<ThemeContextProvider>
  <Component
    horizontal={true}
    index={1}
    label="1 sem."
    multiFilter={true}
    selected={false}
  >
    <FilterItem
      horizontal={true}
      index={1}
      label="1 sem."
      multiFilter={true}
      selected={false}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="transparent"
        horizontal={true}
        index={1}
      >
        <StyledNativeComponent
          backgroundColor="transparent"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={true}
          index={1}
        >
          <ForwardRef
            backgroundColor="transparent"
            horizontal={true}
            index={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 19,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="transparent"
              horizontal={true}
              hostRef={null}
              index={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 19,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 19,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 19,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 19,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 19,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#A3A2A2"
                      >
                        <StyledNativeComponent
                          color="#A3A2A2"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#A3A2A2"
                            style={
                              Array [
                                Object {
                                  "color": "#A3A2A2",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#A3A2A2"
                              style={
                                Array [
                                  Object {
                                    "color": "#A3A2A2",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders selected FilterItem 1`] = `
<ThemeContextProvider>
  <Component
    horizontal={false}
    index={0}
    label="1 sem."
    selected={true}
  >
    <FilterItem
      horizontal={false}
      index={0}
      label="1 sem."
      selected={true}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="#F3F2F2"
        horizontal={false}
        index={0}
      >
        <StyledNativeComponent
          backgroundColor="#F3F2F2"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={false}
          index={0}
        >
          <ForwardRef
            backgroundColor="#F3F2F2"
            horizontal={false}
            index={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F3F2F2",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="#F3F2F2"
              horizontal={false}
              hostRef={null}
              index={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#F3F2F2",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#F3F2F2",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#F3F2F2",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#F3F2F2",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#F3F2F2",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#000000"
                      >
                        <StyledNativeComponent
                          color="#000000"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#000000"
                            style={
                              Array [
                                Object {
                                  "color": "#000000",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#000000"
                              style={
                                Array [
                                  Object {
                                    "color": "#000000",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders selected multi filter FilterItem 1`] = `
<ThemeContextProvider>
  <Component
    horizontal={false}
    index={0}
    label="1 sem."
    multiFilter={true}
    selected={true}
  >
    <FilterItem
      horizontal={false}
      index={0}
      label="1 sem."
      multiFilter={true}
      selected={true}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="#F3F2F2"
        horizontal={false}
        index={0}
      >
        <StyledNativeComponent
          backgroundColor="#F3F2F2"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={false}
          index={0}
        >
          <ForwardRef
            backgroundColor="#F3F2F2"
            horizontal={false}
            index={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F3F2F2",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="#F3F2F2"
              horizontal={false}
              hostRef={null}
              index={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#F3F2F2",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#F3F2F2",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#F3F2F2",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#F3F2F2",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#F3F2F2",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#5100FF"
                      >
                        <StyledNativeComponent
                          color="#5100FF"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#5100FF"
                            style={
                              Array [
                                Object {
                                  "color": "#5100FF",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#5100FF"
                              style={
                                Array [
                                  Object {
                                    "color": "#5100FF",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <SvgMock
                        height={12}
                        style={
                          Object {
                            "marginLeft": 5.65,
                          }
                        }
                        width={12}
                      />
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders unselected FilterItem 1`] = `
<ThemeContextProvider>
  <Component
    horizontal={false}
    index={0}
    label="1 sem."
    selected={false}
  >
    <FilterItem
      horizontal={false}
      index={0}
      label="1 sem."
      selected={false}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="transparent"
        horizontal={false}
        index={0}
      >
        <StyledNativeComponent
          backgroundColor="transparent"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={false}
          index={0}
        >
          <ForwardRef
            backgroundColor="transparent"
            horizontal={false}
            index={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="transparent"
              horizontal={false}
              hostRef={null}
              index={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#A3A2A2"
                      >
                        <StyledNativeComponent
                          color="#A3A2A2"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#A3A2A2"
                            style={
                              Array [
                                Object {
                                  "color": "#A3A2A2",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#A3A2A2"
                              style={
                                Array [
                                  Object {
                                    "color": "#A3A2A2",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;

exports[`FilterItem Props tests renders unselected multi filter FilterItem 1`] = `
<ThemeContextProvider>
  <Component
    horizontal={false}
    index={0}
    label="1 sem."
    multiFilter={true}
    selected={false}
  >
    <FilterItem
      horizontal={false}
      index={0}
      label="1 sem."
      multiFilter={true}
      selected={false}
      setTheme={[Function]}
      theme={
        Object {
          "backgroundColor": "#ffffff",
          "color": "#101112",
          "colors": Object {
            "components": Object {
              "background": "#FFFFFF",
              "backgroundAction": "#F3F2F2",
              "backgroundContainer": "#FFFFFF",
              "backgroundFilter": "#F3F2F2",
              "backgroundInputButton": "#5100FF",
              "backgroundPrimaryAction": "#5100FF",
              "icon": "#000000",
            },
            "palette": Object {
              "black": "#000000",
              "comparisonDescription": "#A3A2A2",
              "line": "#D4D8D9",
              "lost": "#CA1010",
              "pending": "#7C7C7C",
              "purple": "#5100FF",
              "separator": "#979797",
              "white": "#FFFFFF",
              "won": "#14B916",
            },
            "shadows": Object {},
            "texts": Object {
              "buttons": Object {
                "actions": "#5100FF",
                "cancellable": "#3E3E3E",
                "filter": "#3E3E3E",
                "isPrimaryAction": "#FFFFFF",
                "social": Object {
                  "apple": "#000000",
                  "facebook": "#1976D2",
                  "gmail": "#F44336",
                },
              },
              "description": "#ADADAD",
              "filters": Object {
                "multiFilter": "#5100FF",
                "selected": "#000000",
                "unselected": "#A3A2A2",
              },
              "input": Object {
                "label": "#7C7C7C",
                "value": "#000000",
              },
              "labelInput": "#7C7C7C",
              "reverseText": "#FFFFFF",
              "stats": Object {
                "kpiValue": "#3E3E3E",
              },
              "text": "#000000",
              "title": "#000000",
            },
          },
          "isShadow": true,
          "key": "white",
          "statusBar": "dark-content",
        }
      }
      themes={
        Array [
          Object {
            "backgroundColor": "#101112",
            "color": "#ffffff",
            "colors": Object {
              "components": Object {
                "background": "#101112",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#2F3134",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#FFFFFF",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#FFFFFF",
                },
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#FFFFFF",
                },
                "text": "#FFFFFF",
                "title": "#FFFFFF",
              },
            },
            "isShadow": false,
            "key": "dark",
            "statusBar": "light-content",
          },
          Object {
            "backgroundColor": "#ffffff",
            "color": "#101112",
            "colors": Object {
              "components": Object {
                "background": "#FFFFFF",
                "backgroundAction": "#F3F2F2",
                "backgroundContainer": "#FFFFFF",
                "backgroundFilter": "#F3F2F2",
                "backgroundInputButton": "#5100FF",
                "backgroundPrimaryAction": "#5100FF",
                "icon": "#000000",
              },
              "palette": Object {
                "black": "#000000",
                "comparisonDescription": "#A3A2A2",
                "line": "#D4D8D9",
                "lost": "#CA1010",
                "pending": "#7C7C7C",
                "purple": "#5100FF",
                "separator": "#979797",
                "white": "#FFFFFF",
                "won": "#14B916",
              },
              "shadows": Object {},
              "texts": Object {
                "buttons": Object {
                  "actions": "#5100FF",
                  "cancellable": "#3E3E3E",
                  "filter": "#3E3E3E",
                  "isPrimaryAction": "#FFFFFF",
                  "social": Object {
                    "apple": "#000000",
                    "facebook": "#1976D2",
                    "gmail": "#F44336",
                  },
                },
                "description": "#ADADAD",
                "filters": Object {
                  "multiFilter": "#5100FF",
                  "selected": "#000000",
                  "unselected": "#A3A2A2",
                },
                "input": Object {
                  "label": "#7C7C7C",
                  "value": "#000000",
                },
                "labelInput": "#7C7C7C",
                "reverseText": "#FFFFFF",
                "stats": Object {
                  "kpiValue": "#3E3E3E",
                },
                "text": "#000000",
                "title": "#000000",
              },
            },
            "isShadow": true,
            "key": "white",
            "statusBar": "dark-content",
          },
        ]
      }
    >
      <Styled(Component)
        backgroundColor="transparent"
        horizontal={false}
        index={0}
      >
        <StyledNativeComponent
          backgroundColor="transparent"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "displayName": "Styled(Component)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
  background-color: ",
                  [Function],
                  ";
  border-radius: 8px;
  flex-direction: row;
  margin-top: ",
                  [Function],
                  ";
  margin-left: ",
                  [Function],
                  ";
  height: 24px;
  padding-left: 9px;
  padding-right: 9px;
  justify-content: center;
  align-items: center;
",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          horizontal={false}
          index={0}
        >
          <ForwardRef
            backgroundColor="transparent"
            horizontal={false}
            index={0}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "height": 24,
                  "justifyContent": "center",
                  "marginLeft": 0,
                  "marginTop": 0,
                  "paddingLeft": 9,
                  "paddingRight": 9,
                },
              ]
            }
          >
            <TouchableOpacity
              backgroundColor="transparent"
              horizontal={false}
              hostRef={null}
              index={0}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "borderRadius": 8,
                    "flexDirection": "row",
                    "height": 24,
                    "justifyContent": "center",
                    "marginLeft": 0,
                    "marginTop": 0,
                    "paddingLeft": 9,
                    "paddingRight": 9,
                  },
                ]
              }
            >
              <ForwardRef(AnimatedComponentWrapper)
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      },
                    ],
                    Object {
                      "opacity": 1,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  accessible={true}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        },
                      ],
                      Object {
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "height": 24,
                        "justifyContent": "center",
                        "marginLeft": 0,
                        "marginTop": 0,
                        "opacity": 1,
                        "paddingLeft": 9,
                        "paddingRight": 9,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "borderRadius": 8,
                          "flexDirection": "row",
                          "height": 24,
                          "justifyContent": "center",
                          "marginLeft": 0,
                          "marginTop": 0,
                          "opacity": 1,
                          "paddingLeft": 9,
                          "paddingRight": 9,
                        }
                      }
                    >
                      <Styled(Text)
                        color="#A3A2A2"
                      >
                        <StyledNativeComponent
                          color="#A3A2A2"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "displayName": "Styled(Text)",
                              "inlineStyle": InlineStyle {
                                "rules": Array [
                                  "
  color: ",
                                  [Function],
                                  ";
  font-family: 'AvenirNext-DemiBold';
  font-size: 13px;
  line-height: 18px;
  letter-spacing: -0.14px;
",
                                ],
                              },
                              "render": [Function],
                              "styledComponentId": "StyledNativeComponent",
                              "target": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <Text
                            color="#A3A2A2"
                            style={
                              Array [
                                Object {
                                  "color": "#A3A2A2",
                                  "fontFamily": "AvenirNext-DemiBold",
                                  "fontSize": 13,
                                  "letterSpacing": -0.14,
                                  "lineHeight": 18,
                                },
                              ]
                            }
                          >
                            <Text
                              color="#A3A2A2"
                              style={
                                Array [
                                  Object {
                                    "color": "#A3A2A2",
                                    "fontFamily": "AvenirNext-DemiBold",
                                    "fontSize": 13,
                                    "letterSpacing": -0.14,
                                    "lineHeight": 18,
                                  },
                                ]
                              }
                            >
                              1 sem.
                            </Text>
                          </Text>
                        </StyledNativeComponent>
                      </Styled(Text)>
                      <PressabilityDebugView
                        color="cyan"
                      />
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </TouchableOpacity>
          </ForwardRef>
        </StyledNativeComponent>
      </Styled(Component)>
    </FilterItem>
  </Component>
</ThemeContextProvider>
`;
